//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClient.ProductServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://productservices", ConfigurationName="ProductServices.ProcessInventoryUpdate")]
    public interface ProcessInventoryUpdate {
        
        // CODEGEN: Generating message contract since the operation SubmitData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SubmitData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestClient.ProductServices.SubmitDataResponse SubmitData(TestClient.ProductServices.SubmitDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SubmitData", ReplyAction="*")]
        System.Threading.Tasks.Task<TestClient.ProductServices.SubmitDataResponse> SubmitDataAsync(TestClient.ProductServices.SubmitDataRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://Schemas.InventoryUpdate")]
    public partial class InventoryUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productNameField;
        
        private string serialNumberField;
        
        private string quantityChangeField;
        
        private string locationField;
        
        private System.DateTime updateDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
                this.RaisePropertyChanged("ProductName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
                this.RaisePropertyChanged("SerialNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", Order=2)]
        public string QuantityChange {
            get {
                return this.quantityChangeField;
            }
            set {
                this.quantityChangeField = value;
                this.RaisePropertyChanged("QuantityChange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date", Order=4)]
        public System.DateTime UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
                this.RaisePropertyChanged("UpdateDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SubmitDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Schemas.InventoryUpdate", Order=0)]
        public TestClient.ProductServices.InventoryUpdate InventoryUpdate;
        
        public SubmitDataRequest() {
        }
        
        public SubmitDataRequest(TestClient.ProductServices.InventoryUpdate InventoryUpdate) {
            this.InventoryUpdate = InventoryUpdate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SubmitDataResponse {
        
        public SubmitDataResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProcessInventoryUpdateChannel : TestClient.ProductServices.ProcessInventoryUpdate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessInventoryUpdateClient : System.ServiceModel.ClientBase<TestClient.ProductServices.ProcessInventoryUpdate>, TestClient.ProductServices.ProcessInventoryUpdate {
        
        public ProcessInventoryUpdateClient() {
        }
        
        public ProcessInventoryUpdateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessInventoryUpdateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessInventoryUpdateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessInventoryUpdateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestClient.ProductServices.SubmitDataResponse TestClient.ProductServices.ProcessInventoryUpdate.SubmitData(TestClient.ProductServices.SubmitDataRequest request) {
            return base.Channel.SubmitData(request);
        }
        
        public void SubmitData(TestClient.ProductServices.InventoryUpdate InventoryUpdate) {
            TestClient.ProductServices.SubmitDataRequest inValue = new TestClient.ProductServices.SubmitDataRequest();
            inValue.InventoryUpdate = InventoryUpdate;
            TestClient.ProductServices.SubmitDataResponse retVal = ((TestClient.ProductServices.ProcessInventoryUpdate)(this)).SubmitData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestClient.ProductServices.SubmitDataResponse> TestClient.ProductServices.ProcessInventoryUpdate.SubmitDataAsync(TestClient.ProductServices.SubmitDataRequest request) {
            return base.Channel.SubmitDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestClient.ProductServices.SubmitDataResponse> SubmitDataAsync(TestClient.ProductServices.InventoryUpdate InventoryUpdate) {
            TestClient.ProductServices.SubmitDataRequest inValue = new TestClient.ProductServices.SubmitDataRequest();
            inValue.InventoryUpdate = InventoryUpdate;
            return ((TestClient.ProductServices.ProcessInventoryUpdate)(this)).SubmitDataAsync(inValue);
        }
    }
}
